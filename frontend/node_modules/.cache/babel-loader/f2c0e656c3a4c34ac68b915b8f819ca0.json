{"ast":null,"code":"var _jsxFileName = \"/home/wandita/Documents/programacion/dise\\xF1o web/flaskreact/frontend/src/components/Users.js\";\nimport React, { useState, useEffect } from 'react';\nconst API = process.env.REACT_APP_API;\nexport const Users = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [users, setUsers] = useState([]);\n  const [editing, setEditing] = useState(false);\n  const [id, setId] = useState('');\n\n  const handleSubmit = async e => {\n    if (!editing) {\n      e.preventDefault();\n      console.log(email, name, password);\n      const res = await fetch(`${API}/users`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name,\n          email,\n          password\n        })\n      });\n      const data = await res.json();\n      console.log(data);\n    } else {\n      const res = await fetch(`${API}/users/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name,\n          email,\n          password\n        })\n      });\n      const data = await res.json();\n      console.log(data);\n    }\n\n    await getUsers();\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  const getUsers = async () => {\n    const res = await fetch(`${API}/users`);\n    const data = await res.json();\n    console.log(data);\n    setUsers(data);\n  };\n\n  const deleteUser = async id => {\n    const confirmacion = window.confirm('quiere eliminar esta entrada?');\n\n    if (confirmacion) {\n      const res = await fetch(`${API}/users/${id}`, {\n        method: 'DELETE'\n      });\n      const data = await res.json();\n      console.log(data);\n      await getUsers();\n    }\n  };\n\n  const editUser = async id => {\n    const res = await fetch(`${API}/user/${id}`);\n    const data = await res.json();\n    setEditing(true);\n    setId(id);\n    setName(data.name);\n    setEmail(data.email);\n    setPassword(data.password);\n    console.log(data);\n  };\n\n  useEffect(() => {\n    getUsers();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"card card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 22\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: e => setName(e.target.value),\n    value: name,\n    className: \"form-control\",\n    placeholder: \"name\",\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 26\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 22\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    onChange: e => setEmail(e.target.value),\n    value: email,\n    className: \"form-control\",\n    placeholder: \"Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 26\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 22\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    onChange: e => setPassword(e.target.value),\n    value: password,\n    className: \"form-control\",\n    placeholder: \"Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 26\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary btn-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 21\n    }\n  }, \"Create\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table table-striped\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 16\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 20\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 29\n    }\n  }, \"Nombre\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 29\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 29\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 29\n    }\n  }, \"Operations\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 21\n    }\n  }, users.map(user => /*#__PURE__*/React.createElement(\"tr\", {\n    key: user._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 25\n    }\n  }, user.name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 25\n    }\n  }, user.email), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 25\n    }\n  }, user.password), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: e => editUser(user._id),\n    className: \"btn btn-secondary btn-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 29\n    }\n  }, \"Editar\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: e => deleteUser(user._id),\n    className: \"btn btn-danger btn-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 29\n    }\n  }, \"Eliminar\")))))))));\n};","map":{"version":3,"sources":["/home/wandita/Documents/programacion/dise√±o web/flaskreact/frontend/src/components/Users.js"],"names":["React","useState","useEffect","API","process","env","REACT_APP_API","Users","name","setName","email","setEmail","password","setPassword","users","setUsers","editing","setEditing","id","setId","handleSubmit","e","preventDefault","console","log","res","fetch","method","headers","body","JSON","stringify","data","json","getUsers","deleteUser","confirmacion","window","confirm","editUser","target","value","map","user","_id"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AAEA,MAAMC,GAAG,GAAGC,OAAO,CAACC,GAAR,CAAYC,aAAxB;AAIA,OAAO,MAAMC,KAAK,GAAG,MAAM;AAEvB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAM,CAACe,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACiB,EAAD,EAAKC,KAAL,IAAclB,QAAQ,CAAC,EAAD,CAA5B;;AAEA,QAAMmB,YAAY,GAAG,MAAOC,CAAP,IAAW;AAE5B,QAAG,CAACL,OAAJ,EAAY;AAERK,MAAAA,CAAC,CAACC,cAAF;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYd,KAAZ,EAAmBF,IAAnB,EAAyBI,QAAzB;AACA,YAAMa,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEvB,GAAI,QAAR,EAAiB;AACpCwB,QAAAA,MAAM,EAAC,MAD6B;AAEpCC,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX,SAF2B;AAKpCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBvB,UAAAA,IADiB;AAEjBE,UAAAA,KAFiB;AAGjBE,UAAAA;AAHiB,SAAf;AAL8B,OAAjB,CAAvB;AAYA,YAAMoB,IAAI,GAAG,MAAMP,GAAG,CAACQ,IAAJ,EAAnB;AACAV,MAAAA,OAAO,CAACC,GAAR,CAAYQ,IAAZ;AACH,KAlBD,MAmBK;AACD,YAAMP,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEvB,GAAI,UAASe,EAAG,EAApB,EAAsB;AACzCS,QAAAA,MAAM,EAAE,KADiC;AAEzCC,QAAAA,OAAO,EAAE;AAEL,0BAAe;AAFV,SAFgC;AAOzCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBvB,UAAAA,IADiB;AAEjBE,UAAAA,KAFiB;AAGjBE,UAAAA;AAHiB,SAAf;AAPmC,OAAtB,CAAvB;AAYA,YAAMoB,IAAI,GAAG,MAAMP,GAAG,CAACQ,IAAJ,EAAnB;AACAV,MAAAA,OAAO,CAACC,GAAR,CAAYQ,IAAZ;AACH;;AAGD,UAAME,QAAQ,EAAd;AAEAzB,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAE,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,IAAAA,WAAW,CAAC,EAAD,CAAX;AAEH,GA7CD;;AA+CA,QAAMqB,QAAQ,GAAG,YAAY;AACzB,UAAMT,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEvB,GAAI,QAAR,CAAvB;AACA,UAAM6B,IAAI,GAAG,MAAMP,GAAG,CAACQ,IAAJ,EAAnB;AACAV,IAAAA,OAAO,CAACC,GAAR,CAAYQ,IAAZ;AACAjB,IAAAA,QAAQ,CAACiB,IAAD,CAAR;AACH,GALD;;AAOA,QAAMG,UAAU,GAAG,MAAOjB,EAAP,IAAc;AAC7B,UAAMkB,YAAY,GAAGC,MAAM,CAACC,OAAP,CAAe,+BAAf,CAArB;;AACA,QAAIF,YAAJ,EAAkB;AACd,YAAMX,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEvB,GAAI,UAASe,EAAG,EAApB,EAAsB;AACzCS,QAAAA,MAAM,EAAE;AADiC,OAAtB,CAAvB;AAIA,YAAMK,IAAI,GAAG,MAAMP,GAAG,CAACQ,IAAJ,EAAnB;AAEAV,MAAAA,OAAO,CAACC,GAAR,CAAYQ,IAAZ;AACA,YAAME,QAAQ,EAAd;AAEH;AAEJ,GAdD;;AAgBA,QAAMK,QAAQ,GAAG,MAAOrB,EAAP,IAAc;AAC3B,UAAMO,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEvB,GAAI,SAAQe,EAAG,EAAnB,CAAvB;AACA,UAAMc,IAAI,GAAG,MAAMP,GAAG,CAACQ,IAAJ,EAAnB;AAEAhB,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,IAAAA,KAAK,CAACD,EAAD,CAAL;AAEAT,IAAAA,OAAO,CAACuB,IAAI,CAACxB,IAAN,CAAP;AACAG,IAAAA,QAAQ,CAACqB,IAAI,CAACtB,KAAN,CAAR;AACAG,IAAAA,WAAW,CAACmB,IAAI,CAACpB,QAAN,CAAX;AAEAW,IAAAA,OAAO,CAACC,GAAR,CAAYQ,IAAZ;AACH,GAZD;;AAgBA9B,EAAAA,SAAS,CAAC,MAAM;AACZgC,IAAAA,QAAQ;AACX,GAFQ,EAEN,EAFM,CAAT;AAIA,sBAEK;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,QAAQ,EAAEd,YAAhB;AAA8B,IAAA,SAAS,EAAC,gBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACK;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,IAAI,EAAC,MAAZ;AACO,IAAA,QAAQ,EAAEC,CAAC,IAAIZ,OAAO,CAACY,CAAC,CAACmB,MAAF,CAASC,KAAV,CAD7B;AAEO,IAAA,KAAK,EAAEjC,IAFd;AAGO,IAAA,SAAS,EAAC,cAHjB;AAIO,IAAA,WAAW,EAAC,MAJnB;AAKO,IAAA,SAAS,MALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADL,eAUK;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,IAAI,EAAC,OAAZ;AACO,IAAA,QAAQ,EAAEa,CAAC,IAAIV,QAAQ,CAACU,CAAC,CAACmB,MAAF,CAASC,KAAV,CAD9B;AAEO,IAAA,KAAK,EAAE/B,KAFd;AAGO,IAAA,SAAS,EAAC,cAHjB;AAIO,IAAA,WAAW,EAAC,OAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAVL,eAmBK;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,IAAI,EAAC,UAAZ;AACO,IAAA,QAAQ,EAAEW,CAAC,IAAIR,WAAW,CAACQ,CAAC,CAACmB,MAAF,CAASC,KAAV,CADjC;AAEO,IAAA,KAAK,EAAE7B,QAFd;AAGO,IAAA,SAAS,EAAC,cAHjB;AAIO,IAAA,WAAW,EAAC,UAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAnBL,eA4BI;AAAQ,IAAA,SAAS,EAAC,2BAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA5BJ,CADJ,CADH,eAmCG;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACD;AAAO,IAAA,SAAS,EAAC,qBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,CADL,CADJ,eASK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCE,KAAK,CAAC4B,GAAN,CAAUC,IAAI,iBACf;AAAI,IAAA,GAAG,EAAEA,IAAI,CAACC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,IAAI,CAACnC,IAAV,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKmC,IAAI,CAACjC,KAAV,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKiC,IAAI,CAAC/B,QAAV,CAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAI;AACI,IAAA,OAAO,EAAGS,CAAD,IAAOkB,QAAQ,CAACI,IAAI,CAACC,GAAN,CAD5B;AAEI,IAAA,SAAS,EAAC,0BAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAJ,eAKI;AACI,IAAA,OAAO,EAAGvB,CAAD,IAAOc,UAAU,CAACQ,IAAI,CAACC,GAAN,CAD9B;AAEI,IAAA,SAAS,EAAC,uBAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,CAJJ,CADC,CADD,CATL,CADC,CADJ,CAnCH,CAFL;AAwEH,CA7KM","sourcesContent":["import React, {useState, useEffect} from 'react'\n\nconst API = process.env.REACT_APP_API;\n\n    \n\nexport const Users = () => {\n    \n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const [users, setUsers] = useState([])\n\n    const [editing, setEditing] = useState(false)\n    const [id, setId] = useState('')\n\n    const handleSubmit = async (e)=>{\n        \n        if(!editing){\n            \n            e.preventDefault();\n            console.log(email, name, password);\n            const res = await fetch(`${API}/users`, {\n                method:'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    name,\n                    email,\n                    password\n                })\n            });\n        \n            const data = await res.json();\n            console.log(data);\n        }\n        else {\n            const res = await fetch(`${API}/users/${id}`,{\n                method: 'PUT',\n                headers: {\n\n                    'Content-Type':'application/json'\n                \n                },\n                body: JSON.stringify({\n                    name,\n                    email,\n                    password})\n            })\n            const data = await res.json()\n            console.log(data)\n        }\n        \n        \n        await getUsers();\n\n        setName('');\n        setEmail('');\n        setPassword('');\n\n    }\n\n    const getUsers = async () => {\n        const res = await fetch(`${API}/users`);\n        const data = await res.json();\n        console.log(data);\n        setUsers(data)\n    }\n\n    const deleteUser = async (id) => {\n        const confirmacion = window.confirm('quiere eliminar esta entrada?');\n        if (confirmacion) {\n            const res = await fetch(`${API}/users/${id}`,{\n                method: 'DELETE'\n            });\n     \n            const data = await res.json();\n     \n            console.log(data);\n            await getUsers();       \n\n        }\n\n    }\n\n    const editUser = async (id) => {\n        const res = await fetch(`${API}/user/${id}`);\n        const data = await res.json();\n        \n        setEditing(true); \n        setId(id);\n\n        setName(data.name);\n        setEmail(data.email);\n        setPassword(data.password);\n\n        console.log(data)\n    }\n\n\n\n    useEffect(() => {\n        getUsers();\n    }, [])\n    \n    return (\n\n         <div className=\"row\">\n            <div className=\"col-md-4\">\n                <form onSubmit={handleSubmit} className=\"card card-body\">\n                     <div className=\"form-group\">\n                         <input type=\"text\"\n                                onChange={e => setName(e.target.value)}\n                                value={name}\n                                className=\"form-control\"\n                                placeholder=\"name\"\n                                autoFocus\n                         />\n                     </div>\n                     <div className=\"form-group\">\n                         <input type=\"email\"\n                                onChange={e => setEmail(e.target.value)}\n                                value={email}\n                                className=\"form-control\"\n                                placeholder=\"Email\"\n                                \n                         />\n                     </div>\n                     <div className=\"form-group\">\n                         <input type=\"password\"\n                                onChange={e => setPassword(e.target.value)}\n                                value={password}\n                                className=\"form-control\"\n                                placeholder=\"Password\"\n                              \n                         />\n                     </div>\n                    <button className=\"btn btn-primary btn-block\">\n                        Create\n                    </button>\n                </form>\n            </div>\n            <div className=\"col md-6\">\n                <div className=\"card\">\n               <table className=\"table table-striped\">\n                   <thead>\n                        <tr>\n                            <th>Nombre</th>\n                            <th>Email</th>\n                            <th>Password</th>\n                            <th>Operations</th>\n                        </tr>\n                   </thead>\n                    <tbody>\n                    {users.map(user => (\n                    <tr key={user._id}>\n                        <td>{user.name}</td>\n                        <td>{user.email}</td>\n                        <td>{user.password}</td>\n                        <td><button \n                                onClick={(e) => editUser(user._id)}\n                                className=\"btn btn-secondary btn-sm\">Editar</button>\n                                \n                            \n                            <button\n                                onClick={(e) => deleteUser(user._id)} \n                                className=\"btn btn-danger btn-sm\">Eliminar</button>\n                        </td>\n                    </tr>\n                ))}\n                    </tbody>\n               </table>\n               </div>\n            </div>\n        </div>\n    )\n\n}"]},"metadata":{},"sourceType":"module"}